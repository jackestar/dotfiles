--- zshrc.def	2025-09-19 07:32:18.000000000 -0400
+++ zshrc.new	2025-09-24 11:44:31.481138637 -0400
@@ -1,3 +1,10 @@
+# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
+# Initialization code that may require console input (password prompts, [y/n]
+# confirmations, etc.) must go above this block; everything else may go below.
+if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
+  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
+fi
+
 # If you come from bash you might have to change your $PATH.
 # export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH
 
@@ -8,7 +15,7 @@
 # load a random theme each time Oh My Zsh is loaded, in which case,
 # to know which specific one was loaded, run: echo $RANDOM_THEME
 # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
-ZSH_THEME="robbyrussell"
+ZSH_THEME="powerlevel10k/powerlevel10k"
 
 # Set list of themes to pick from when loading at random
 # Setting this variable when ZSH_THEME=random will cause zsh to load
@@ -70,7 +77,7 @@
 # Custom plugins may be added to $ZSH_CUSTOM/plugins/
 # Example format: plugins=(rails git textmate ruby lighthouse)
 # Add wisely, as too many plugins slow down shell startup.
-plugins=(git)
+plugins=(git npm sudo)
 
 # User configuration
 
@@ -101,9 +108,117 @@
 # alias zshconfig="mate ~/.zshrc"
 # alias ohmyzsh="mate ~/.oh-my-zsh"
 
+[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
+
 ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh
 if [[ ! -d $ZSH_CACHE_DIR ]]; then
   mkdir $ZSH_CACHE_DIR
 fi
 
 source $ZSH/oh-my-zsh.sh
+
+alias downa='yt-dlp --embed-thumbnail --embed-metadata --embed-chapters --cookies "/home/jackestar/.apps/cookies.txt" --audio-format "mp3" -x  -f "ba" -o "%(artist)s - %(title)s.%(ext)s"'
+alias downV='yt-dlp --write-sub --write-auto-sub --embed-subs --sub-lang "es/es-ve/ES/es-es/es-us,en/en-us/en-uk/en-ca" --embed-thumbnail --embed-metadata --embed-chapters --cookies "/home/jackestar/.apps/cookies.txt" -f "(bv+ba/b)[height<=880]" -o "%(title)s.%(ext)s"'
+alias downv='yt-dlp --embed-thumbnail --embed-metadata --embed-chapters --cookies "/home/jackestar/.apps/cookies.txt" -f "(bv+ba/b)[height<=700]" -o "%(title)s.%(ext)s"'
+
+ELECTRON_OZONE_PLATFORM_HINT=wayland
+
+# kicad_export() {
+# # Verificar si se proporcionó un argumento (nombre del proyecto)
+# if [ $# -eq 0 ]; then
+#   echo "Por favor, proporciona el nombre del proyecto KiCad como argumento."
+#   exit 1
+# fi
+
+# basename=$(basename "$1")
+
+# # Comando para exportar el esquema a SVG
+# kicad-cli sch export svg --exclude-drawing-sheet --black-and-white "$1.kicad_sch" -o /tmp
+
+# # Comando para optimizar el SVG con Inkscape
+# inkscape --export-type=svg --export-plain-svg --export-area-drawing "/tmp/$basename.svg" -o "$1.svg"
+
+# rm "/tmp/$basename.svg"
+# }
+
+# mpasm_compile() {
+# # Verificar si se proporcionó un argumento (nombre del proyecto)
+# if [ $# -eq 0 ]; then
+#   echo "Selecciona el archivo asm"
+#   exit 1
+# fi
+
+# dirname=$(dirname "$1")
+# # basename=$(basename "$1")
+# filename="${$(basename -- $1)%.*}" 
+# processor=${2:-16f877a}
+
+# # Compile
+# /opt/microchip/mplabx/v5.35/mpasmx/mpasmx -a=INHX32 -p=$processor -w=0 -o="$dirname/$filename.o" $1
+
+# # Linking
+# /opt/microchip/mplabx/v5.35/mpasmx/mplink -p$processor -w -z__MPLAB_BUILD=1 -o"$dirname/$filename.cof" "$dirname/$filename.o"
+
+# # COFF to HEX
+# /opt/microchip/mplabx/v5.35/mpasmx/mp2hex "$dirname/$filename.cof"
+
+# cat "$filename.ERR" | grep Error
+# rm "$dirname/$filename.o"
+# }
+
+# xc8-asm_compile() {
+
+# base="${$(basename -- $1)%.*}"
+# dirname=$(dirname "$1")
+# processor=${2:-16f877a}
+# mpu=$(echo ${2:-16f877a} | tr '[:lower:]' '[:upper:]')
+# MPU=$(echo ${2:-16f877a} | tr '[:upper:]' '[:lower:]')
+# echo $mpu $MPU
+
+# "/opt/microchip/xc8/v2.45/pic-as/bin/pic-as" -mcpu=PIC$MPU -c -o $base.o $base.Asm   -mdfp="/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8"  -msummary=+mem,-psect,-class,-hex,-file,-sha1,-sha256,-xml,-xmlfull -v -fmax-errors=20 -mwarn=0 -xassembler-with-cpp
+# /opt/microchip/xc8/v2.45/pic/bin/xc8 --xc8cc -q --opt=none --chip=$mpu -o$base.o --objdir=$dirname --outdir=$dirname $base.Asm --dfp=/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8 --summary=+mem,-psect,-class,-hex,-file,-sha1,-sha256,-xml,-xmlfull -v --errors=20 --warn=0 -P --callgraph=std -L--fixupoverflow=error -c --std=c99 --runtime=-clear --runtime=-init --runtime=-clib --runtime=+no_startup --runtime=-cinc --runtime=-clink --runtime=-cmacros -D__PICAS -D__PICAS_VERSION=2450 -L-ver=XC8^PIC(R)^Assembler###V2.45 -L--fixupoverflow=lstwarn --errformat=%f:%l:%c: error: (%n) %s --warnformat=%f:%l:%c: warning: (%n) %s --msgformat=%f:%l:%c: advisory: (%n) %s
+# /opt/microchip/xc8/v2.45/pic/bin/picc --xc8cc -q --opt=none --chip=$mpu -o$base.o --objdir=$dirname --outdir=$dirname $base.Asm --dfp=/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8 --summary=+mem,-psect,-class,-hex,-file,-sha1,-sha256,-xml,-xmlfull -v --errors=20 --warn=0 -P --callgraph=std -L--fixupoverflow=error -c --std=c99 --runtime=-clear --runtime=-init --runtime=-clib --runtime=+no_startup --runtime=-cinc --runtime=-clink --runtime=-cmacros -D__PICAS -D__PICAS_VERSION=2450 -L-ver=XC8^PIC(R)^Assembler###V2.45 -L--fixupoverflow=lstwarn --errformat=%f:%l:%c: error: (%n) %s --warnformat=%f:%l:%c: warning: (%n) %s --msgformat=%f:%l:%c: advisory: (%n) %s
+# /opt/microchip/xc8/v2.45/pic/bin/clang --language=assembler-with-cpp -Wno-gcc-compat -std=c99 -Wconversion -D__PICAS -D__PICAS_VERSION=2450 -isystem/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc -isystem/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include -isystem/opt/microchip/xc8/v2.45/pic/include/proc -isystem/opt/microchip/xc8/v2.45/pic/include -MMD -MF$base.d -D_$MPU -D__$MPU -D__$MPU__ -D_PIC14 -D_COMMON_=1 -D_COMMON_ADDR_=112 -D_COMMON_SIZE_=16 -D_BANKCOUNT_=4 -D_BANKBITS_=2 -D_GPRCOUNT_=4 -D_GPRBITS_=2 -D__DATABANK=2 -D__FLASHTYPE=2 -D_ROMSIZE=8192 -D_EEPROMSIZE=256 -DEEPROM_SIZE=256 -D_FLASH_ERASE_SIZE=8 -D_FLASH_WRITE_SIZE=8 -isystem/opt/microchip/xc8/v2.45/pic/include/legacy $base.Asm -o$base.i -E
+# /opt/microchip/xc8/v2.45/pic/bin/aspic --edf=/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/dat/20231012211500_en.msgs --emax=20 --cmode=htc -v -E1 --cfgdata=/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/dat/cfgdata/$mpu.cfgdata -no_trans -C/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/dat/ini/$mpu.ini -ver=V2.45 --opt= -mcpu=$MPU -R2000 -I -no_bankop -no_gotobits --prog=00h-07FFhx4 --xident -o$base.o $base.i
+# "/opt/microchip/xc8/v2.45/pic-as/bin/pic-as" -mcpu=PIC$MPU $base.o -o $dirname/$base.hex -mdfp="/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8"  -msummary=+mem,-psect,-class,-hex,-file,-sha1,-sha256,-xml,-xmlfull -mcallgraph=std -Wl,-Map=$dirname/$base.map -mno-download-hex
+
+# /opt/microchip/xc8/v2.45/pic-as/bin/pic-as -mcpu=${2:-16f877a} -c -o $base.o $base.Asm -mdfp="/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8"  -msummary=+mem,-psect,-class,-hex,-file,-sha1,-sha256,-xml,-xmlfull -v -fmax-errors=20 -mwarn=0 -xassembler-with-cpp
+
+# "/opt/microchip/xc8/v2.45/pic-as/bin/pic-as" -mcpu=${2:-16f877a} $base.o \
+# -o $base.p.hex \
+#   -mdfp="/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8"  -msummary=+mem,-psect,-class,-hex,-file,-sha1,-sha256,-xml,-xmlfull -mcallgraph=std -Wl,-Map=dist/default/production/toggle2.X.production.map -mno-download-hex
+# }
+
+# export KICAD_SYMBOL_DIR=/usr/share/kicad/library
+# export KICAD_FOOTPRINT_DIR=/usr/share/kicad/modules
+
+# inkexport () {
+#   if [ -z "$1" ]; then
+#     echo "Usage: inkexport <filename>"
+#     return 1
+#   fi
+
+#   local input_file="$1"
+#   local output_file="$(basename "${input_file%.*}").svg"
+
+#   if [ ! -f "$input_file" ]; then
+#     echo "Error: Input file '$input_file' not found."
+#     return 1
+#   fi
+
+#   echo "Exporting '$input_file' to '$output_file'..."
+#   inkscape "$input_file" --export-type="svg" --export-filename="$output_file"
+
+#   if [ $? -eq 0 ]; then
+#     echo "Successfully exported to '$output_file'."
+#   else
+#     echo "Error exporting '$input_file'."
+#     return 1
+#   fi
+# }
+
+# ANDROID_HOME=/home/jackestar/Android/Sdk
+
+# alias repeat=~/.apps/repeat.sh
+
+# alias codeServer="code-server --bind-addr 0.0.0.0:6969 --user-data-dir ~/.config/Code/User --extensions-dir ~/.vscode/extensions"
\ No newline at end of file
